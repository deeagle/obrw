\hypertarget{obrw__utils_8h}{
\section{obrw\_\-utils.h File Reference}
\label{obrw__utils_8h}\index{obrw\_\-utils.h@{obrw\_\-utils.h}}
}


$<$$<$ OBRW -\/ OpenBoxRandomWallpaper $>$$>$ -\/-\/ \hyperlink{obrw__utils_8h}{obrw\_\-utils.h}  


{\ttfamily \#include $<$time.h$>$}\par
{\ttfamily \#include $<$stdlib.h$>$}\par
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{obrw__utils_8h_a56b6caa0e096c5ccc6baeabc29287518}{obrwUtils\_\-setHighDigitBorder} (double)
\begin{DoxyCompactList}\small\item\em Set's the local multiplikator for random digits. \item\end{DoxyCompactList}\item 
void \hyperlink{obrw__utils_8h_a6d6d63d8fad69e3c276607f03781c29a}{obrwUtils\_\-setRandomCounterToZero} (void)
\begin{DoxyCompactList}\small\item\em Resets and starts the random-\/number-\/generator. \item\end{DoxyCompactList}\item 
int \hyperlink{obrw__utils_8h_a936cc686d3d7e35b52a33dc062403369}{obrwUtils\_\-randomDigit} (void)
\begin{DoxyCompactList}\small\item\em Get a random number (remember to start counter before get a random). \item\end{DoxyCompactList}\item 
char $\ast$ \hyperlink{obrw__utils_8h_a4799bc70241ac62133e24ca83ce621fb}{obrwUtils\_\-getUserHomeDir} (void)
\begin{DoxyCompactList}\small\item\em Get the users homepath. \item\end{DoxyCompactList}\item 
void \hyperlink{obrw__utils_8h_af43c31a03b9ae16cf5a543dc9386e8f7}{obrwUtils\_\-freeCString} (char $\ast$)
\begin{DoxyCompactList}\small\item\em OBRW-\/Version of free(). \item\end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
$<$$<$ OBRW -\/ OpenBoxRandomWallpaper $>$$>$ -\/-\/ \hyperlink{obrw__utils_8h}{obrw\_\-utils.h} URL: \href{http://deeagle.de}{\tt http://deeagle.de}

Copyright (c) 2007-\/2010 Martin Kock $<$\href{mailto:root@deeagle.de}{\tt root@deeagle.de}$>$

Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation. It is provided \char`\"{}as is\char`\"{} without express or implied warranty.\par
\par
\par


The file includes some methods which work like utils for the tool OBRW. So you may find some methods to get random-\/digits, or a version of free with some security options. 

\subsection{Function Documentation}
\hypertarget{obrw__utils_8h_af43c31a03b9ae16cf5a543dc9386e8f7}{
\index{obrw\_\-utils.h@{obrw\_\-utils.h}!obrwUtils\_\-freeCString@{obrwUtils\_\-freeCString}}
\index{obrwUtils\_\-freeCString@{obrwUtils\_\-freeCString}!obrw_utils.h@{obrw\_\-utils.h}}
\subsubsection[{obrwUtils\_\-freeCString}]{\setlength{\rightskip}{0pt plus 5cm}void obrwUtils\_\-freeCString (char $\ast$ {\em cstr})}}
\label{obrw__utils_8h_af43c31a03b9ae16cf5a543dc9386e8f7}


OBRW-\/Version of free(). 

It's a four-\/way-\/working-\/function:\par
 1. Check if it's exist.\par
 2. Rewrite old data with 0.\par
 3. Free data.\par
 4. set ptr NULL.\par


\begin{DoxyReturn}{Returns}
Nothing, it's void. 
\end{DoxyReturn}
\hypertarget{obrw__utils_8h_a4799bc70241ac62133e24ca83ce621fb}{
\index{obrw\_\-utils.h@{obrw\_\-utils.h}!obrwUtils\_\-getUserHomeDir@{obrwUtils\_\-getUserHomeDir}}
\index{obrwUtils\_\-getUserHomeDir@{obrwUtils\_\-getUserHomeDir}!obrw_utils.h@{obrw\_\-utils.h}}
\subsubsection[{obrwUtils\_\-getUserHomeDir}]{\setlength{\rightskip}{0pt plus 5cm}char$\ast$ obrwUtils\_\-getUserHomeDir (void)}}
\label{obrw__utils_8h_a4799bc70241ac62133e24ca83ce621fb}


Get the users homepath. 

\begin{DoxyReturn}{Returns}
The users-\/homepath (set in the environment). 
\end{DoxyReturn}

\begin{DoxyRetVals}{Return values}
\item[{\em /home/user/}]success. \item[{\em NULL}]fail. \end{DoxyRetVals}
\hypertarget{obrw__utils_8h_a936cc686d3d7e35b52a33dc062403369}{
\index{obrw\_\-utils.h@{obrw\_\-utils.h}!obrwUtils\_\-randomDigit@{obrwUtils\_\-randomDigit}}
\index{obrwUtils\_\-randomDigit@{obrwUtils\_\-randomDigit}!obrw_utils.h@{obrw\_\-utils.h}}
\subsubsection[{obrwUtils\_\-randomDigit}]{\setlength{\rightskip}{0pt plus 5cm}int obrwUtils\_\-randomDigit (void)}}
\label{obrw__utils_8h_a936cc686d3d7e35b52a33dc062403369}


Get a random number (remember to start counter before get a random). 

\begin{DoxyReturn}{Returns}
A random number as an integer. 
\end{DoxyReturn}
\hypertarget{obrw__utils_8h_a56b6caa0e096c5ccc6baeabc29287518}{
\index{obrw\_\-utils.h@{obrw\_\-utils.h}!obrwUtils\_\-setHighDigitBorder@{obrwUtils\_\-setHighDigitBorder}}
\index{obrwUtils\_\-setHighDigitBorder@{obrwUtils\_\-setHighDigitBorder}!obrw_utils.h@{obrw\_\-utils.h}}
\subsubsection[{obrwUtils\_\-setHighDigitBorder}]{\setlength{\rightskip}{0pt plus 5cm}void obrwUtils\_\-setHighDigitBorder (double {\em highBorder})}}
\label{obrw__utils_8h_a56b6caa0e096c5ccc6baeabc29287518}


Set's the local multiplikator for random digits. 

Nothing, it's void.\hypertarget{obrw__utils_8h_a6d6d63d8fad69e3c276607f03781c29a}{
\index{obrw\_\-utils.h@{obrw\_\-utils.h}!obrwUtils\_\-setRandomCounterToZero@{obrwUtils\_\-setRandomCounterToZero}}
\index{obrwUtils\_\-setRandomCounterToZero@{obrwUtils\_\-setRandomCounterToZero}!obrw_utils.h@{obrw\_\-utils.h}}
\subsubsection[{obrwUtils\_\-setRandomCounterToZero}]{\setlength{\rightskip}{0pt plus 5cm}void obrwUtils\_\-setRandomCounterToZero (void)}}
\label{obrw__utils_8h_a6d6d63d8fad69e3c276607f03781c29a}


Resets and starts the random-\/number-\/generator. 

\begin{DoxyReturn}{Returns}
Nothing, it's void. 
\end{DoxyReturn}
